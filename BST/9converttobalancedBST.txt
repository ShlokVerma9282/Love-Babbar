void inorder(Node*root,vector<int>&v)
    {
        if(root==NULL)
        {
            return;
        }
        inorder(root->left,v);
        v.push_back(root->data);
        inorder(root->right,v);
    }
    Node*solve(vector<int>v,int s,int e)
    {
        if(s>e)
        {
            return NULL;
        }
        int mid = (s+e)/2;
        Node*root = new Node(v[mid]);
        
        root->left = solve(v,s,mid-1);
        root->right = solve(v,mid+1,e);
        
        return root;
    }
    Node *binaryTreeToBST (Node *root)
    {
        //Your code goes here
        vector<int>v;
        inorder(root,v);
        sort(v.begin(),v.end());
        Node*temp = solve(v,0,v.size()-1);
        return temp;        
    }