/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root == NULL)
        {
            return root;
        }
        if(key>root->val)
        {
            root->right=deleteNode(root->right,key);
        }
        else if(key<root->val)
        {
            root->left=deleteNode(root->left,key);
        }
        else
        {
            if(root->left==NULL&&root->right==NULL)
            {
                return NULL;
            }
            else if(root->left==NULL||root->right==NULL)
            {
                if(root->left==NULL)
                {
                    return root=root->right;
                }
                else
                {
                    return root=root->left;
                }
            }
            else
            {
             TreeNode* suc = getSuc(root);
             root->val=suc->val;
             root->right = deleteNode(root->right,suc->val);   
            }
        }
        return root;
    }

    TreeNode* getSuc(TreeNode* root)
    {
        TreeNode* curr = root->right;
        while(curr!=NULL &&curr->left!=NULL)
        {
            curr=curr->left;
        }
        return curr;
    }
};