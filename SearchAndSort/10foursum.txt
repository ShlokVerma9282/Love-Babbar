class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int t) 
    {
        vector<vector<int>>ans;
        sort(nums.begin(),nums.end());
        long long int m=1000000007;
        int n = nums.size();
        if(n<4)
        {
            return ans;
        }
        for(int i=0;i<n-3;i++)
        {
            if(i>0&&nums[i]==nums[i-1])
            {
                continue;
            }
            if(nums[i]>t&&t>0)
            {
                break;
            }
            if(nums[i]%m+nums[i+1]%m+nums[i+2]%m+nums[i+3]%m>t)
            {
                break;
            }
            if(nums[i]%m+nums[n-3]%m+nums[n-2]%m+nums[n-1]%m<t)
            {
                continue;
            }
            for(int j=i+1;j<n-2;j++)
            {
                if(j>i+1&&nums[j]==nums[j-1])
                {
                    continue;
                }
                if(nums[i]%m+nums[j]%m+nums[j+1]%m+nums[j+2]%m>t)
                {
                    break;
                }
                if(nums[i]%m+nums[j]%m+nums[n-2]%m+nums[n-1]%m<t)
                {
                    continue;
                }
                int left = j+1;
                int right = n-1;
                while (left<right)
                {
                    int sum = nums[i]%m+nums[j]%m+nums[left]%m+nums[right]%m;
                    if(sum<t) 
                    {
                        left++;
                    }
                    else if(sum>t)
                    {
                        right--;
                    }
                    else
                    {
                        ans.push_back(vector<int>{nums[i],nums[j],nums[left],nums[right]});
                        do{left++;}while(nums[left]==nums[left-1]&&left<right);
                        do{right--;}while(nums[right]==nums[right+1]&&left<right);
                    }
                }
            }
        }
        return ans;
        
    }
};