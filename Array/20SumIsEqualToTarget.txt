#include <bits/stdc++.h>

bool helper(int n,int k,vector<int>&arr,int **dp){
    if(k==0)
    {
        return true;
    }
    if(n<=0 || k<0)
    {
        return false;
     }
    if(dp[n][k]!=-1)
    {
        return dp[n][k];
    }
    bool take =false;
    bool not_take = false;
    take = helper(n-1,k-arr[n-1],arr,dp);
    not_take = helper(n-1,k,arr,dp);
    return dp[n][k] = take||not_take;
}

bool subsetSumToK(int n, int k, vector<int> &arr) {
    // Write your code here.
    int **dp = new int *[n+1];
    for(int i = 0;i<n+1;i++){
        dp[i] = new int [k+1];
    }
    for(int i=0;i<=n;i++){
      for(int j = 0;j<=k;j++){
        dp[i][j]=-1;
        }
    }
    return helper(n,k,arr,dp);
}