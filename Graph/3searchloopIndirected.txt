bool dfs(int src,vector<int>&visited,vector<int>&path,vector<int> adj[])
  {
      visited[src]=1;
      path[src]=1;
      
      for(auto x:adj[src]){
          if(!visited[x]){
              bool ans =dfs(x,visited,path,adj);
              if(ans)
              {
                  return true;
              }
             
          }
            else if(path[x])
              {
                  return true;
              }
      }
      path[src]=0;
      return false;
  }
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<int>visited(V,0);
        vector<int>path(V,0);
        int j=0;
        for(int i=0;i<V;i++){
            if(!visited[i]){
                bool ans=dfs(i,visited,path,adj);
                if(ans){
                    return true;
                }
            }
        }
        return false;
    }