class Solution {
public:
    int coinChange(vector<int>& c, int a) {
        if(a==0)
        {
            return 0;
        }
        int dp[a+1];
        dp[0]=0;
        for (int i=1; i<a+1; i++) {
            dp[i] = INT_MAX;
        }
        for(int i=1;i<=a;i++)
        {
            for(int j=0;j<c.size();j++)
            {
                if(i%c[j]==0)
                {
                    dp[i]=min(dp[i],i/c[j]);
                }
                if (i-c[j] > 0) {
                    if (dp[i-c[j]] != INT_MAX) {
                        dp[i] = min(dp[i], dp[i-c[j]]+1);
                    }
                }
            }
        }
        if (dp[a] == INT_MAX)
            return -1;
        else
            return dp[a]; 
    }
};