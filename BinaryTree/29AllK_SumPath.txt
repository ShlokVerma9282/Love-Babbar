class Solution {
public:
    int find(vector<int>&arr,int ele,int s,int e){
        for(int i=s;i<=e;i++){
            if(arr[i]==ele){
                return i;
            }
        }
        return -1;
    }
    TreeNode* build(vector<int>& preorder, vector<int>& inorder,int s1,int s2,int e1,int e2){
        if(s1>e1 || s2>s2){
            return NULL;
        }
        int ind=find(inorder,preorder[s1],s2,e2);
        TreeNode* root=new TreeNode(preorder[s1]);
        root->left=build(preorder,inorder,s1+1,s2,s1+(ind-s2),ind-1);
        root->right=build(preorder,inorder,s1+1+(ind-s2),ind+1,e1,e2);
        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int n=preorder.size();
        return build(preorder,inorder,0,0,n-1,n-1);
        
    }
};